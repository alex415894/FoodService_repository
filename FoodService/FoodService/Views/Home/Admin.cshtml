@{
    ViewBag.Title = "Home Page";
}

<body ng-controller="purchaseController">
    <div class="page-header">
        <h1> Food Service </h1>
    </div>
    <div class="panel">
        <div class="form-inline">
            <div class="row">
                <div class="col-sm-10 col-sm-offset-1"><h2 class="text-center">Dishes for week</h2></div>
                <div class="row">
                    <div class="col-sm-2 bg-success col-sm-offset-1"><h2>Monday</h2></div>
                    <div class="col-sm-2 bg-success"><h2>Tuesday</h2></div>
                    <div class="col-sm-2 bg-success"><h2>Wednesday</h2></div>
                    <div class="col-sm-2 bg-success"><h2>Thursday</h2></div>
                    <div class="col-sm-2 bg-success"><h2>Friday</h2></div>
                </div>
                <div class="row">
                    <div class="col-sm-2 col-sm-offset-1"><h3>"1"</h3></div>
                    <div class="col-sm-2 bg-warning"><h3>"2"</h3></div>
                    <div class="col-sm-2"><h3>"3"</h3></div>
                    <div class="col-sm-2 bg-warning"><h3>"4"</h3></div>
                    <div class="col-sm-2"><h3>"5"</h3></div>
                </div>
                <div class="row">
                    <div class="col-sm-10 bg-success col-sm-offset-1"><h2 class="text-center">All dishes</h2></div>
                </div>
                <div class="row">
                    <div class="col-sm-10 col-sm-offset-1 bg-warning">
                        <h3>"My text All dishes"</h3>
                        <table class="table table-striped ">
                            <thead>
                                <tr>
                                    <th>Предмет</th>
                                    <th>Цена</th>

                                </tr>
                            </thead>
                            <tbody>
                                <tr ng-repeat="item in list.items">
                                    <td>{{item.name}}</td>
                                    <td>{{item.price}}</td>

                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
                @*<div class="col-sm-offset-1">
                        <button type="button" class="btn btn-default">Стандартная</button>
                        <button type="button" class="btn btn-primary">Основная</button>
                        <button type="button" class="btn btn-success">Подтвердить</button>
                        <button type="button" class="btn btn-info">Уведомление</button>
                        <button type="button" class="btn btn-warning">Внимание</button>
                        <button type="button" class="btn btn-danger">Отмена</button>
                        <button type="button" class="btn btn-link">Ссылка</button>
                    </div>*@
            </div>
        </div>
        <br />
        <div class="form-inline">
            <div class="form-group">
                <div class="col-md-8">
                    <input class="form-control" ng-model="text" placeholder="Название" />
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-6">
                    <input type="number" class="form-control" ng-model="price" placeholder="Цена" />
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-12 col-md-18">
                    <button class="btn btn-default" ng-click="addItem(text, price)">Добавить</button>
                </div>
            </div>
        </div>

    </div>
            <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.3.11/angular.min.js"></script>
            <script>
                var model = {
                    items
                        : [
                        { name: "Хлеб", price: 15.9 },
                        { name: "Масло", price: 60 },
                        { name: "Картофель", price: 22.6 },
                        { name: "Сыр", price: 310 }
                    ]
                };
                var purchaseApp = angular.module("purchaseApp", []);
                purchaseApp.controller("purchaseController", function ($scope) {
                    $scope.list = model;
                    $scope.addItem = function (text, price) {
                        $scope.list.items.push({ purchase: text, price: price, done: false });
                    }
                });
            </script>
</body>


    <div id="tableBlock"></div>
    <div id="editBlock">
        <p><b>Редактирование блюда</b></p>
        <table>
             <tr><td><input type="hidden" id="editId" /></td><td></td></tr>
             <tr><td><label>Название: </label></td><td><input type="text" id="editName" /></td></tr>
             <tr><td><label>Цена </label></td><td><input type="text" id="editPrice" /></td></tr>

        </table>
        <button id="editDich">Сохранить</button>
    </div>
<div id="createBlock">
    <p><b>Добавление блюда</b></p>
    <table>
        <tr><td><label>Название: </label></td><td><input type="text" id="addName" /></td></tr>
        <tr><td><label>Цена: </label></td><td><input type="text" id="addPrice" /></td></tr>

    </table>
    <button id="addDish">Сохранить</button>
</div>
@section scripts
{
    <script type="text/javascript">
    $(document).ready(function () {

        GetAllDishes();

        $("#editDish").click(function (event) {
            event.preventDefault();
            EditDish();
        });

        $("#addDish").click(function (event) {
            event.preventDefault();
            AddDish();
        });

    });
    // Получение всех блюд по ajax-запросу
    function GetAllDishes() {

        $("#createBlock").css('display', 'block');
        $("#editBlock").css('display', 'none');
        $.ajax({
            url: '/api/Dishes',
            type: 'GET',
            dataType: 'json',
            success: function (data) {
                WriteResponse(data);
            },
            error: function (x, y, z) {
                alert(x + '\n' + y + '\n' + z);
            }
        });
    }
 // Добавление нового блюда
    function AddDish() {
        // получаем значения для добавляемого блюда
        var dish = {
            Name: $('#addName').val(),
            Price: $('#addPrice').val(),

        };

        $.ajax({
            url: '/api/Dishes/',
            type: 'POST',
            data: JSON.stringify(dish),
            contentType: "application/json;charset=utf-8",
            success: function (data) {
                GetAllDishes();
            },
            error: function (x, y, z) {
                alert(x + '\n' + y + '\n' + z);
            }
        });
    }
 // Удаление блюда
    function DeleteDish(id) {

        $.ajax({
            url: '/api/Dishes/' + id,
            type: 'DELETE',
            contentType: "application/json;charset=utf-8",
            success: function (data) {
                GetAllDishes();
            },
            error: function (x, y, z) {
                alert(x + '\n' + y + '\n' + z);
            }
        });
    }
    // редактирование блюда
    function EditDish() {
        var id = $('#editId').val()
        // получаем новые значения для редактируемого блюда
        var dish = {
            Id: $('#editId').val(),
            Name: $('#editName').val(),
            Price: $('#editPrice').val(),

        };
        $.ajax({
            url: '/api/Dishes/' + id,
            type: 'PUT',
            data: JSON.stringify(dish),
            contentType: "application/json;charset=utf-8",
            success: function (data) {
                GetAllDishes();
            },
            error: function (x, y, z) {
                alert(x + '\n' + y + '\n' + z);
            }
        });
    }
 // вывод полученных данных на экран
    function WriteResponse(dishes) {
        var strResult = "<div class=\"col-sm-4 col-sm-offset-1 bg-warning\">" + "<table table table-striped ><th>№</th><th>Name</th><th>Price</th>";
        $.each(dishes, function (index, dish) {
            strResult += "<tr><td>" + dish.Id + "&nbsp" + "</td><td> " + dish.Name + "&nbsp" + "</td><td>" +
            dish.Price + "</td><td><a id='editItem' data-item='" + dish.Id + "' onclick='EditItem(this);' > &nbsp Edit  </a></td>" +
            "<td><a id='delItem' data-item='" + dish.Id + "' onclick='DeleteItem(this);' > &nbsp  Delete  </a></td></tr>";
        });
        strResult += "</table></div>";
        $("#tableBlock").html(strResult);

    }
    // обработчик удаления
    function DeleteItem(el) {
        // получаем id удаляемого объекта
        var id = $(el).attr('data-item');
        DeleteDish(id);
    }
    // обработчик редактирования
    function EditItem (el) {
        // получаем id редактируемого объекта
        var id = $(el).attr('data-item');
        GetDish(id);
    }
    // вывод данных редактируемой блюда в поля для редактирования
    function ShowDish(dish) {
        if (dish != null) {
            $("#createBlock").css('display', 'none');
            $("#editBlock").css('display', 'block');
            $("#editId").val(dish.Id);
            $("#editName").val(dish.Name);
            $("#editPrice").val(dish.Price);

        }
        else {
            alert("Такого блюда не существует");
        }
    }
    // запрос блюда на редактирование
    function GetDish(id) {
        $.ajax({
            url: '/api/Dishes/' + id,
            type: 'GET',
            dataType: 'json',
            success: function (data) {
                ShowDish(data);
            },
            error: function (x, y, z) {
                alert(x + '\n' + y + '\n' + z);
            }
        });
    }
    </script>
}
